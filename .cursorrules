# Cursor Development Rules

## Commit Message Standards

We follow the [Conventional Commits](https://www.conventionalcommits.org/) specification. Commit messages should follow this format:

```text
<type>(<scope>): <description>

[optional body]

[optional footer(s)]
```

### Types
- `feat`: New feature
- `fix`: Bug fix
- `docs`: Documentation changes
- `style`: Code style changes (formatting, etc)
- `refactor`: Code restructuring
- `perf`: Performance improvements
- `test`: Adding/fixing tests
- `chore`: Tooling and maintenance

### Scopes
- `core`: Core addon functionality
- `ui`: User interface components
- `quiz`: Quiz/question related changes
- `db`: Database/storage changes
- `loc`: Localization
- `deps`: Dependencies
- `tools`: Development tools and scripts

### Examples
```text
feat(ui): add score display panel
fix(core): prevent duplicate questions
docs(readme): update installation steps
```

For more detailed commit standards, see `docs/commit-standards.md`.

## GitHub Commands

This repository includes several shell functions for interacting with GitHub. These commands are available after sourcing the commands file:

```bash
source scripts/github-commands.sh
```

### Creating Pull Requests
```bash
create_pr "Your PR Title" "Your PR Description"
```

### Checking Issues
- `check_features`: List open feature requests
- `check_bugs`: List open bug reports
- `check_issues`: List all open issues with labels

#### Prerequisites
- GitHub token stored in macOS keychain with name "github-riddler-token"
- `curl` and `jq` installed
- Git repository configured with remote set to this repository

#### Example Usage
```bash
# Create a PR
create_pr "feat(ui): add score display" "Implements the score display panel for the quiz interface"

# Check issues
check_features  # List feature requests
check_bugs     # List bug reports
check_issues   # List all issues with labels
```

### Notes
- PRs will be created from your current branch to main
- The commands use the GitHub API with authentication from your stored token
- Follow conventional commit format for PR titles (see Commit Message Standards above) 